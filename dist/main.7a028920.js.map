{"version":3,"sources":["main.js"],"names":["colorsArray","colorData","color","Math","floor","random","$siteList","$","console","log","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","returnColors","prompt","indexOf","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase","a","style","backgroundColor"],"mappings":"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","file":"main.7a028920.js","sourceRoot":"..\\src","sourcesContent":["const colorsArray = [\"#9A8185\", \"#F0BDB9\", \"#79889B\", \"#34706c\", \"#B1DDDE\", \"#7D8971\", \"#8995A5\",\"#234A23\"];\r\n\r\nconst colorData = () => {\r\n    let color;\r\n    return colorsArray[Math.floor(Math.random() * 7)]\r\n}\r\n\r\nconst $siteList = $('.siteList');\r\nconsole.log($siteList)\r\nconst $lastLi = $siteList.find('li.last')\r\nconst x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x)\r\nconst hashMap = xObject || [\r\n    {logo: 'Y', url: 'https://www.yuque.com', color: '#79889B'},\r\n    {logo: 'G', url: 'https://www.github.com', color: '#deb23a'}\r\n]\r\n\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '') // 删除 / 开头的内容\r\n}\r\n\r\nconst render = () => {\r\n    $siteList.find('li:not(.last)').remove()\r\n    hashMap.forEach((node, index) => {\r\n        console.log(node)\r\n        const $li = $(`<li>\r\n      <div class=\"site\">\r\n        <div class=\"logo\">${node.logo}</div>\r\n        <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n        <div class=\"close\">\r\n          <svg class=\"icon\">\r\n            <use xlink:href=\"#icon-close\"></use>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </li>`).insertBefore($lastLi)\r\n        $li.on('click', () => {\r\n            window.open(node.url,\"_self\")\r\n        })\r\n        $li.on('click', '.close', (e) => {\r\n            e.stopPropagation() // 阻止冒泡\r\n            hashMap.splice(index, 1)\r\n            render()\r\n            returnColors()\r\n        })\r\n    })\r\n};\r\n\r\n\r\nrender();\r\n\r\nconsole.log(hashMap)\r\n$('.addButton').on('click', () => {\r\n    let url = window.prompt('请问你要添加的网址是啥？');\r\n    if (url.indexOf('http') !== 0) {\r\n        url = 'https://' + url\r\n    }\r\n    console.log(url)\r\n    hashMap.push({\r\n        logo: simplifyUrl(url)[0].toUpperCase(),\r\n        url: url,\r\n        color: colorData()\r\n    })\r\n    render()\r\n    returnColors()\r\n})\r\n\r\nwindow.onbeforeunload = () => {\r\n    const string = JSON.stringify(hashMap)\r\n    localStorage.setItem('x', string)\r\n}\r\n\r\n\r\n$(document).on('keypress', (e) => {\r\n    const {key} = e\r\n    for (let i = 0; i < hashMap.length; i++) {\r\n        if (hashMap[i].logo.toLowerCase() === key) {\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})\r\n\r\nconst returnColors = () => {\r\n    let a = $('.site')\r\nfor(let i=0;i<hashMap.length;i++){\r\n    a[i].style.backgroundColor = hashMap[i].color\r\n}\r\n}\r\nreturnColors()\r\n\r\n\r\n"]}